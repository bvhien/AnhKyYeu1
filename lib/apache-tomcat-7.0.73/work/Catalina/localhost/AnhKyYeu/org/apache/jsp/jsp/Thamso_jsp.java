/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2017-01-08 13:54:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Thamso_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\n");
      out.write("    <div ng-controller=\"ThamSo\">\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <h4 class=\"title\">Quản lý Tham số</h4>\n");
      out.write("            <div class=\"col-md-6\" ng-class=\"myForm.TenThamSo.$invalid?'invalid form-group ':'form - group'\">\n");
      out.write("                <label class=\"control-label\"><span>* </span>Tên tham số:</label>\n");
      out.write("                <input type=\"text\" class=\"form-control\" ng-model=\"ThamSo.TenThamSo\" name=\"TenThamSo\" id=\"TenThamSo\" val-required>\n");
      out.write("                <span ng-show=\"myForm.TenThamSo.$error.valRequired\" class=\"validate-text\">Tên tham số là bắt buộc nhập</span>\t\t\t\t\t                \t\t\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-md-3\" ng-class=\"myForm.MaThamSo.$invalid?'invalid form-group ':'form - group'\">\n");
      out.write("                <label class=\"control-label\"><span>* </span>Mã tham số:</label>\n");
      out.write("                <input type=\"text\" class=\"form-control\" ng-model=\"ThamSo.MaThamSo\" name=\"MaThamSo\" val-required>\n");
      out.write("                <span ng-show=\"myForm.MaThamSo.$error.valRequired\" class=\"validate-text\">Mã tham số là bắt buộc nhập</span>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-md-3\" ng-class=\"myForm.TrangThai.$invalid?'invalid form-group ':'form - group'\">\n");
      out.write("                <label class=\"control-label\"><span>* </span>Trạng thái:</label>\n");
      out.write("                <select class=\"form-control\" ng-model=\"ThamSo.TrangThai\" name=\"TrangThai\" val-required>\n");
      out.write("                    <option value=\"\">---Chọn trạng thái kích hoạt---</option>\n");
      out.write("                    <option value=\"1\">Kích hoạt</option>\n");
      out.write("                    <option value=\"0\">Không kích hoạt</option>\n");
      out.write("                </select>\n");
      out.write("                <span ng-show=\"myForm.TrangThai.$error.valRequired\" class=\"validate-text\">Trạng thái là bắt buộc chọn</span>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-md-6\" ng-class=\"myForm.DienGiai.$invalid?'invalid form-group ':'form - group'\">\n");
      out.write("                <label class=\"control-label\"><span>* </span>Diễn giải</label>\n");
      out.write("                <input type=\"text\" class=\"form-control\" ng-model=\"ThamSo.DienGiai\" name=\"DienGiai\" val-required>\n");
      out.write("                <span ng-show=\"myForm.DienGiai.$error.valRequired\" class=\"validate-text\">Diễn giải là bắt buộc nhập</span>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-md-3\">\n");
      out.write("                <a href=\"\" ng-click=\"ThemThamSo()\" class=\"btn btn-primary btn-function\">Thêm bản ghi mới</a>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <table class=\"table table-bordered table-hover\" datatable cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"table table-striped table-bordered table-condensed\" id=\"example\">\n");
      out.write("                <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th>\n");
      out.write("                            <input ng-model=\"selectAllValue\"  ng-true-value=\"1\" ng-false-value=\"0\" value=\"1\" ng-click='selectAllChuSoHuu()' type=\"checkbox\"> \n");
      out.write("                        </th>\n");
      out.write("                        <th>ID</th>\n");
      out.write("                        <th>Mã tham số</th>\n");
      out.write("                        <th>Giá trị</th>\n");
      out.write("                        <th>Diễn giải</th>\n");
      out.write("                        <th>Trạng thái</th>\n");
      out.write("                        <th>Ngày tạo</th>\n");
      out.write("                        <th>Ngày sửa</th>\n");
      out.write("                    </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody>\n");
      out.write("                    <tr ng-repeat=\"ts in TableThamSo\" ng-class=\"{select : $index == selectIndex}\">\n");
      out.write("                        <td>\n");
      out.write("                            <input ng-click='checkAllThongTinXe()' ng-model=\"hoSo.Checked\"  ng-true-value=\"1\" ng-false-value=\"0\" type=\"checkbox\">\n");
      out.write("                        </td>\n");
      out.write("                        <td>{{ts.Id}}</td>\n");
      out.write("                        <td>{{ts.ParaCode}}</td>\n");
      out.write("                        <td>{{ts.ParaValue}}</td>\n");
      out.write("                        <td>{{ts.ParaContent}}</td>\n");
      out.write("                        <td>{{ts.ParaStatus}}</td>\n");
      out.write("                        <td>{{ts.ParaCreatDate}}</td>\n");
      out.write("                        <td>{{ts.ParaEditDate}}</td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("            <a href=\"#\" class=\"btn btn-danger\" role=\"button\">Xóa bản ghi đã chọn</a>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"Thamso-dialog-save\" title=\"Thông báo\">\n");
      out.write("            <p>\n");
      out.write("                <span class=\"ui-icon ui-icon-alert\"\n");
      out.write("                      style=\"float: left; margin: 0 7px 20px 0;\"></span>Lưu thành công\n");
      out.write("            </p>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <script src=\"../js/ThamSo.js\" type=\"text/javascript\"></script>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
